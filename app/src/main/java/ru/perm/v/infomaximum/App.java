/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.perm.v.infomaximum;

import java.io.FileNotFoundException;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        System.out.println("Enter name file (JSON/CSV):");
        Scanner scanner = new Scanner(System.in);
        String filename = scanner.nextLine();
        if (filename.equals("exit")) {
            return;
        }
        System.out.println("Enter method parse (1) with create Product, (2) calc word):");
        Scanner variant = new Scanner(System.in);
        if (variant.equals("1")) {
            createStatWithCreateClassProduct(filename);
        }
        if (variant.equals("2")) {
            createStatWithCreateClassProduct(filename);
        }
    }

    /**
     * Получение статистики с созданием Product
     * @param filename
     */
    private static void createStatWithCreateClassProduct(String filename) {
        ProductJsonReader reader = new ProductJsonReader();
        try {
            List<Product> products = reader.readFromFile(filename);
            IStatCreator stat = new StatCreatorByListProducts();
            List<Product> duplicates = stat.getDuplicatesByGrpAndType(products);
            System.out.println("\n------Duplicates:------");
            for (Product product : duplicates) {
                System.out.println(product);
            }
            System.out.println("\n---Weight by group:----");
            Map<String, Integer> weightByGroup = stat.getSumWegthByGroup(products);
            for (String group : weightByGroup.keySet()) {
                System.out.println(String.format("For group: %s sum weight: %s", group, weightByGroup.get(group)));
            }
            System.out.println("\n-------Min weight------");
            System.out.println(String.format("%s", stat.getMinWeight(products)));
            System.out.println("\n-------Max weight------");
            System.out.println(String.format("%s", stat.getMaxWeight(products)));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }
}
